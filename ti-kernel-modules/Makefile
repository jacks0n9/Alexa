include Rules.make

DEFAULT_LINUXKERNEL_CONFIG=omap3_evm_defconfig
DEFAULT_UBOOT_CONFIG=omap3_evm_config
DEFAULT_XLOAD_CONFIG=omap3evm_config

KERNEL_VERSION= $(shell cat $(LINUXKERNEL_INSTALL_DIR)/include/config/kernel.release)

# export cross compiler location in PATH
PATH := ${PATH}:${CSTOOL_PATH}

FIND_DSPLINKCONFIG = $(shell find $(LINK_INSTALL_DIR)/dsplink/config -name 'CURRENTCFG.MK')

.PHONY:	all clean components help cmem cmem_clean cmem_install install lpm lpm_clean lpm_install dsplink dsplink_clean dsplink_install

#==============================================================================
# Default build target
#==============================================================================
default: all

#==============================================================================
# Build target build necessary components to enable all other build targets.
#==============================================================================
components: cmem dsplink lpm

#==============================================================================
# Clean up the targets built by 'make all'.
#==============================================================================
clean:	dsplink_clean cmem_clean lpm_clean

#==============================================================================
# Build everything rebuildable.
#==============================================================================
all: components

#==============================================================================
# Install everything
#==============================================================================
install: cmem_install dsplink_install

#==============================================================================
# A help message target.
#==============================================================================
help:
	@echo
	@echo "Available build targets are:"
	@echo
	@echo "  components                 : Builds all base components (See Note below)"
	@echo
	@echo "  all                        : Builds all components and applications/examples"
	@echo "  clean                      : Remove files generated by the 'all' target"
	@echo
	@echo "  install                    : Install all the targets in "
	@echo "                               $(EXEC_DIR)"
	@echo
	@echo "  cmem                       : Build the CMEM kernel module"
	@echo "  cmem_clean                 : Remove generated cmem files."
	@echo "  cmem_install               : Install cmemk module"
	@echo
	@echo "  lpm                        : Build LPM"
	@echo "  lpm_clean                  : Remove generated lpm files."
	@echo "  lpm_install                : Install lpm module"
	@echo
	@echo "  dsplink                    : Configure and build DSP Link for ARM and DSP"
	@echo "                               and sample examples"
	@echo "  dsplink_clean              : Remove generated DSP Link files"
	@echo "  dsplink_install            : Install ARM and DSP link files"
	@echo
	@echo "  dsplink_arm                : Configure and build DSP Link for ARM"
	@echo "  dsplink_arm_clean          : Clean DSP Link for ARM"
	@echo
	@echo "  dsplink_dsp                : Configure and build DSP Link for DSP"
	@echo "  dsplink_dsp_clean          : Clean DSP Link for DSP"
	@echo
	@echo "  dsplink_samples            : Build DSP Link ARM and DSP sample applications"
	@echo "  dsplink_samples_clean      : Build DSP Link ARM and DSP sample applications"
	@echo
	@echo
	@echo "==============================================================================="
	@echo "NOTE: The 'make components' target must be issued once upon installation for"
	@echo "      all other targets to build properly.  A 'make clean' target should be"
	@echo "      issued before this target"
	@echo


#==============================================================================
# Build the CMEM kernel module for the configured platform, and make sure the
# kernel_binaries directory is kept in sync. Also, an explicit cleanup target
# is defined.
#==============================================================================
cmem:
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/interface ../../lib/cmem.a470MV
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/module

cmem_clean:
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/module clean
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/interface clean

cmem_install:
	install -d $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp
	install $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/module/cmemk.ko $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp

#==============================================================================
# Build LPM for the configured platform. Also, an explicit cleanup
# target is defined.
#==============================================================================
lpm:
	$(MAKE) -C $(LPM_INSTALL_DIR)/packages/ti/bios/power/modules/omap3530/lpm \
		LINUXKERNEL_INSTALL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
		MVTOOL_PREFIX=$(CSTOOL_PREFIX) \
		DSPLINK_REPO=$(LINK_INSTALL_DIR)

lpm_clean:
	$(MAKE)  -C $(LPM_INSTALL_DIR)/packages/ti/bios/power/modules/omap3530/lpm \
	LINUXKERNEL_INSTALL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
	MVTOOL_PREFIX=$(CSTOOL_PREFIX) \
	DSPLINK_REPO=$(LINK_INSTALL_DIR) clean

lpm_install:
	install -d $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp
	install $(LPM_INSTALL_DIR)/packages/ti/bios/power/modules/omap3530/lpm/lpm_omap3530.ko $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp


dsplink_cfg:
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	perl $(LINK_INSTALL_DIR)/dsplink/config/bin/dsplinkcfg.pl \
	--platform=OMAP3530  --nodsp=1 --dspcfg_0=OMAP3530SHMEM \
	--dspos_0=DSPBIOS5XX --gppos=OMAPLSP --comps=ponslrmc

dsplink_arm_clean:
ifeq ($(FIND_DSPLINKCONFIG), $(LINK_INSTALL_DIR)/dsplink/config/BUILD/CURRENTCFG.MK)
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/gpp/src \
	CROSS_COMPILE=$(CSTOOL_PREFIX) \
	CC=$(CSTOOL_PREFIX)gcc \
	AR=$(CSTOOL_PREFIX)ar \
	LD=$(CSTOOL_PREFIX)ld \
	COMPILER=$(CSTOOL_PREFIX)gcc \
	ARCHIVER=$(CSTOOL_PREFIX)ar \
	KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
	BASE_BUILDOS=$(LINUXKERNEL_INSTALL_DIR) \
	clean
endif

dsplink_arm: dsplink_cfg
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/gpp/src \
	CROSS_COMPILE=$(CSTOOL_PREFIX) \
	CC=$(CSTOOL_PREFIX)gcc \
	COMPILER=$(CSTOOL_PREFIX)gcc \
	ARCHIVER=$(CSTOOL_PREFIX)ar \
	AR=$(CSTOOL_PREFIX)ar \
	LD=$(CSTOOL_PREFIX)ld \
	KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
	BASE_BUILDOS=$(LINUXKERNEL_INSTALL_DIR) \
	all

dsplink_dsp_clean:
ifeq ($(FIND_DSPLINKCONFIG), $(LINK_INSTALL_DIR)/dsplink/config/BUILD/CURRENTCFG.MK)
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/dsp/src \
	BASE_CGTOOLS=$(CODEGEN_INSTALL_DIR) \
	BASE_SABIOS=$(BIOS_INSTALL_DIR) \
	clean
endif

dsplink_dsp: dsplink_cfg
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/dsp/src \
	BASE_CGTOOLS=$(CODEGEN_INSTALL_DIR) \
	BASE_SABIOS=$(BIOS_INSTALL_DIR) \
	all

dsplink_samples_clean:
ifeq ($(FIND_DSPLINKCONFIG), $(LINK_INSTALL_DIR)/dsplink/config/BUILD/CURRENTCFG.MK)
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE)	-C $(LINK_INSTALL_DIR)/dsplink/gpp/src/samples \
	BASE_TOOLCHAIN=$(CSTOOL_DIR) \
	BASE_CGTOOLS=$(CSTOOL_DIR)/bin \
	OSINC_PLATFORM=$(CSTOOL_PREFIX)/lib/gcc/arm-arago-linux-gnueabi/$($(CSTOOL_PREFIX) --dumversion)/include \
	OSINC_TARGET=$(CSTOOL_DIR)/target/usr/include \
	CROSS_COMPILE=$(CSTOOL_PREFIX) \
	CC=$(CSTOOL_PREFIX)gcc \
	COMPILER=$(CSTOOL_PREFIX)gcc \
	ARCHIVER=$(CSTOOL_PREFIX)ar \
	AR=$(CSTOOL_PREFIX)ar \
	LD=$(CSTOOL_PREFIX)ld \
	KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
	clean

	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/dsp/src/samples \
	BASE_CGTOOLS=$(CODEGEN_INSTALL_DIR) \
	BASE_SABIOS=$(BIOS_INSTALL_DIR) \
	XDCTOOLS_DIR=$(XDC_INSTALL_DIR) \
	clean
endif

dsplink_samples:
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE)	-C $(LINK_INSTALL_DIR)/dsplink/gpp/src/samples \
	BASE_TOOLCHAIN=$(CSTOOL_DIR) \
	BASE_CGTOOLS=$(CSTOOL_DIR)/bin \
	OSINC_PLATFORM=$(CSTOOL_PREFIX)/lib/gcc/arm-arago-linux-gnueabi/$($(CSTOOL_PREFIX) --dumversion)/include \
	OSINC_TARGET=$(CSTOOL_DIR)/target/usr/include \
	CROSS_COMPILE="$(CSTOOL_PREFIX)" \
	CC=$(CSTOOL_PREFIX)gcc \
	COMPILER=$(CSTOOL_PREFIX)gcc \
	ARCHIVER=$(CSTOOL_PREFIX)ar \
	AR=$(CSTOOL_PREFIX)ar \
	LD=$(CSTOOL_PREFIX)ld \
	KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
	all

	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/dsp/src/samples \
	BASE_CGTOOLS=$(CODEGEN_INSTALL_DIR) \
	BASE_SABIOS=$(BIOS_INSTALL_DIR) \
	XDCTOOLS_DIR=$(XDC_INSTALL_DIR) \
	all

dsplink_dsp_genpackage:
	$(XDC_INSTALL_DIR)/xdc -C $(LINK_INSTALL_DIR)/dsplink/dsp clean
	$(XDC_INSTALL_DIR)/xdc -C $(LINK_INSTALL_DIR)/dsplink/dsp .interfaces

dsplink_gpp_genpackage:
	$(XDC_INSTALL_DIR)/xdc -C $(LINK_INSTALL_DIR)/dsplink/gpp clean
	$(XDC_INSTALL_DIR)/xdc -C $(LINK_INSTALL_DIR)/dsplink/gpp .interfaces

dsplink: dsplink_arm dsplink_dsp dsplink_samples dsplink_dsp_genpackage dsplink_gpp_genpackage

dsplink_clean: dsplink_arm_clean dsplink_dsp_clean dsplink_samples_clean
    XDCPATH=${DSPLINK} ${XDC_INSTALL_DIR}/xdc .make -PR .
    XDCPATH=${DSPLINK} ${XDC_INSTALL_DIR}/xdc clean -PR .
    XDCPATH=${DSPLINK} ${XDC_INSTALL_DIR}/xdc .interfaces -PR .

dsplink_install:
	install -d $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp
	install $(LINK_INSTALL_DIR)/dsplink/gpp/export/BIN/Linux/OMAP3530/RELEASE/dsplinkk.ko $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp

	install -d $(EXEC_DIR)/usr/share/ti/ti-dsplink-examples
	cp $(LINK_INSTALL_DIR)/dsplink/gpp/export/BIN/Linux/OMAP3530/RELEASE/*gpp $(EXEC_DIR)/usr/share/ti/ti-dsplink-examples
	@for file in $(shell find $(LINK_INSTALL_DIR)/dsplink/dsp/export -name *.out); do \
	cp $$file $(EXEC_DIR)/usr/share/ti/ti-dsplink-examples ; \
	done


