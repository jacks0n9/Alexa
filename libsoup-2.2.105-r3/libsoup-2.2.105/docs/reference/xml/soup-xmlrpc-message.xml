<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="SoupXmlrpcMessage">
<refmeta>
<refentrytitle role="top_of_page">SoupXmlrpcMessage</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBSOUP Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>SoupXmlrpcMessage</refname>
<refpurpose>An XML-RPC Message</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



                    <link linkend="SoupXmlrpcMessage-struct">SoupXmlrpcMessage</link>;
<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link>*  <link linkend="soup-xmlrpc-message-new">soup_xmlrpc_message_new</link>             (const <link linkend="char">char</link> *uri_string);
<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link>*  <link linkend="soup-xmlrpc-message-new-from-uri">soup_xmlrpc_message_new_from_uri</link>    (const <link linkend="SoupUri">SoupUri</link> *uri);
<link linkend="gboolean">gboolean</link>            <link linkend="soup-xmlrpc-message-from-string">soup_xmlrpc_message_from_string</link>     (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *message,
                                                         const <link linkend="char">char</link> *xmlstr);

<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-start-call">soup_xmlrpc_message_start_call</link>      (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         const <link linkend="char">char</link> *method_name);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-end-call">soup_xmlrpc_message_end_call</link>        (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-start-param">soup_xmlrpc_message_start_param</link>     (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-end-param">soup_xmlrpc_message_end_param</link>       (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);

<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-write-int">soup_xmlrpc_message_write_int</link>       (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         long <link linkend="i">i</link> );
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-write-boolean">soup_xmlrpc_message_write_boolean</link>   (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         <link linkend="gboolean">gboolean</link> b);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-write-string">soup_xmlrpc_message_write_string</link>    (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         const <link linkend="char">char</link> *str);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-write-double">soup_xmlrpc_message_write_double</link>    (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         <link linkend="double">double</link> d);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-write-datetime">soup_xmlrpc_message_write_datetime</link>  (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         const <link linkend="time-t">time_t</link> timeval);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-write-base64">soup_xmlrpc_message_write_base64</link>    (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         <link linkend="gconstpointer">gconstpointer</link> buf,
                                                         <link linkend="int">int</link> len);

<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-start-struct">soup_xmlrpc_message_start_struct</link>    (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-end-struct">soup_xmlrpc_message_end_struct</link>      (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-start-member">soup_xmlrpc_message_start_member</link>    (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         const <link linkend="char">char</link> *name);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-end-member">soup_xmlrpc_message_end_member</link>      (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);

<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-start-array">soup_xmlrpc_message_start_array</link>     (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-end-array">soup_xmlrpc_message_end_array</link>       (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);

<link linkend="xmlChar">xmlChar</link>*            <link linkend="soup-xmlrpc-message-to-string">soup_xmlrpc_message_to_string</link>       (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);
<link linkend="void">void</link>                <link linkend="soup-xmlrpc-message-persist">soup_xmlrpc_message_persist</link>         (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);

<link linkend="SoupXmlrpcResponse">SoupXmlrpcResponse</link>* <link linkend="soup-xmlrpc-message-parse-response">soup_xmlrpc_message_parse_response</link>  (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="SoupMessage">SoupMessage</link>
         +----SoupXmlrpcMessage
</synopsis>

</refsect1>








<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="SoupXmlrpcMessage-struct" role="struct"/>SoupXmlrpcMessage</title>
<indexterm><primary>SoupXmlrpcMessage</primary></indexterm><programlisting>typedef struct _SoupXmlrpcMessage SoupXmlrpcMessage;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-new" role="function"/>soup_xmlrpc_message_new ()</title>
<indexterm><primary>soup_xmlrpc_message_new</primary></indexterm><programlisting><link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link>*  soup_xmlrpc_message_new             (const <link linkend="char">char</link> *uri_string);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri_string</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-new-from-uri" role="function"/>soup_xmlrpc_message_new_from_uri ()</title>
<indexterm><primary>soup_xmlrpc_message_new_from_uri</primary></indexterm><programlisting><link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link>*  soup_xmlrpc_message_new_from_uri    (const <link linkend="SoupUri">SoupUri</link> *uri);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-from-string" role="function"/>soup_xmlrpc_message_from_string ()</title>
<indexterm><primary>soup_xmlrpc_message_from_string</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            soup_xmlrpc_message_from_string     (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *message,
                                                         const <link linkend="char">char</link> *xmlstr);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>xmlstr</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-start-call" role="function"/>soup_xmlrpc_message_start_call ()</title>
<indexterm><primary>soup_xmlrpc_message_start_call</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_start_call      (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         const <link linkend="char">char</link> *method_name);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>method_name</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-end-call" role="function"/>soup_xmlrpc_message_end_call ()</title>
<indexterm><primary>soup_xmlrpc_message_end_call</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_end_call        (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-start-param" role="function"/>soup_xmlrpc_message_start_param ()</title>
<indexterm><primary>soup_xmlrpc_message_start_param</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_start_param     (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-end-param" role="function"/>soup_xmlrpc_message_end_param ()</title>
<indexterm><primary>soup_xmlrpc_message_end_param</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_end_param       (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-write-int" role="function"/>soup_xmlrpc_message_write_int ()</title>
<indexterm><primary>soup_xmlrpc_message_write_int</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_write_int       (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         long <link linkend="i">i</link> );</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Param2</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-write-boolean" role="function"/>soup_xmlrpc_message_write_boolean ()</title>
<indexterm><primary>soup_xmlrpc_message_write_boolean</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_write_boolean   (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         <link linkend="gboolean">gboolean</link> b);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-write-string" role="function"/>soup_xmlrpc_message_write_string ()</title>
<indexterm><primary>soup_xmlrpc_message_write_string</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_write_string    (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         const <link linkend="char">char</link> *str);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>str</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-write-double" role="function"/>soup_xmlrpc_message_write_double ()</title>
<indexterm><primary>soup_xmlrpc_message_write_double</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_write_double    (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         <link linkend="double">double</link> d);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>d</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-write-datetime" role="function"/>soup_xmlrpc_message_write_datetime ()</title>
<indexterm><primary>soup_xmlrpc_message_write_datetime</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_write_datetime  (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         const <link linkend="time-t">time_t</link> timeval);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeval</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-write-base64" role="function"/>soup_xmlrpc_message_write_base64 ()</title>
<indexterm><primary>soup_xmlrpc_message_write_base64</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_write_base64    (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         <link linkend="gconstpointer">gconstpointer</link> buf,
                                                         <link linkend="int">int</link> len);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-start-struct" role="function"/>soup_xmlrpc_message_start_struct ()</title>
<indexterm><primary>soup_xmlrpc_message_start_struct</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_start_struct    (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-end-struct" role="function"/>soup_xmlrpc_message_end_struct ()</title>
<indexterm><primary>soup_xmlrpc_message_end_struct</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_end_struct      (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-start-member" role="function"/>soup_xmlrpc_message_start_member ()</title>
<indexterm><primary>soup_xmlrpc_message_start_member</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_start_member    (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg,
                                                         const <link linkend="char">char</link> *name);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-end-member" role="function"/>soup_xmlrpc_message_end_member ()</title>
<indexterm><primary>soup_xmlrpc_message_end_member</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_end_member      (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-start-array" role="function"/>soup_xmlrpc_message_start_array ()</title>
<indexterm><primary>soup_xmlrpc_message_start_array</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_start_array     (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-end-array" role="function"/>soup_xmlrpc_message_end_array ()</title>
<indexterm><primary>soup_xmlrpc_message_end_array</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_end_array       (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-to-string" role="function"/>soup_xmlrpc_message_to_string ()</title>
<indexterm><primary>soup_xmlrpc_message_to_string</primary></indexterm><programlisting><link linkend="xmlChar">xmlChar</link>*            soup_xmlrpc_message_to_string       (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-persist" role="function"/>soup_xmlrpc_message_persist ()</title>
<indexterm><primary>soup_xmlrpc_message_persist</primary></indexterm><programlisting><link linkend="void">void</link>                soup_xmlrpc_message_persist         (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-xmlrpc-message-parse-response" role="function"/>soup_xmlrpc_message_parse_response ()</title>
<indexterm><primary>soup_xmlrpc_message_parse_response</primary></indexterm><programlisting><link linkend="SoupXmlrpcResponse">SoupXmlrpcResponse</link>* soup_xmlrpc_message_parse_response  (<link linkend="SoupXmlrpcMessage">SoupXmlrpcMessage</link> *msg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>msg</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
